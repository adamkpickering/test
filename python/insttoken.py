#!/usr/bin/env python3
import time
# note that this is NOT PyJWT; install with `pip install jwt`
import jwt
import requests

"""
Obtain and return a GitHub installation access token.

Arguments:
    pem_filename: Filename of a PEM file generated by GitHub to
                  authenticate as the installed app.
    app_id: The application ID
    installation_id: The ID of the app installation.

Returns:
    The installation access token obtained from GitHub.
"""
def get_installation_access_token(
    pem_filename: str, app_id: str, installation_id: str
) -> str:

    with open(pem_filename, "rb") as pem_file:
        signing_key = jwt.jwk_from_pem(pem_file.read())
    payload = {
        "iat": int(time.time()),
        "exp": int(time.time()) + 600,
        "iss": app_id,
    }
    jwt_instance = jwt.JWT()
    encoded_jwt = jwt_instance.encode(payload, signing_key, alg="RS256")
    print(encoded_jwt)

    response = requests.post(
        "https://api.github.com/app/installations/" f"{installation_id}/access_tokens",
        headers={
            "Authorization": f"Bearer {encoded_jwt}",
            "Accept": "application/vnd.github+json",
            "X-GitHub-Api-Version": "2022-11-28",
        },
    )
    if not 200 <= response.status_code < 300:
        raise RuntimeError(
            "Unable to get token. Status code was "
            f"{response.status_code}, body was {response.text}."
        )

    return response.json()["token"]

if __name__ == "__main__":
    output = get_installation_access_token(
        "/home/adam/Downloads/test-partner-charts.2024-04-02.private-key.pem",
        "868402",
        "49176701",
    )
    print(output)
